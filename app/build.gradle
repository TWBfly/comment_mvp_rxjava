apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: 'tinker-support.gradle'
android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.cogito.lexiang"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        jumboMode = true //是否支持大工程模式
        threadCount = 8 //线程数
        dexInProcess true
        preDexLibraries true
        maxProcessCount 10
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "lexiang${variant.buildType.name}_${project.name}_${defaultConfig.versionName}_${buildTime()}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation("com.squareup.okhttp3:okhttp:4.1.0")
    implementation("com.squareup.retrofit2:retrofit:2.6.1")
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation "io.reactivex.rxjava2:rxjava:2.2.11"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'me.jessyan:retrofit-url-manager:1.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'
    implementation 'org.jetbrains.anko:anko:0.10.8'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta03'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.hjq:xxpermissions:6.0'
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta05'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0-beta05'
    // kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0-beta05'
    implementation 'com.hjq:toast:8.0'
    implementation 'com.hjq:titlebar:6.0'
    implementation 'com.allenliu.versionchecklib:library:2.2.0'
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-2'
    //Alpha启动框架
    implementation 'com.alibaba.android:alpha:1.0.0.1@aar'
    //bugly
    implementation "com.android.support:multidex:1.0.3"
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.0'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.13'
    implementation 'com.tencent.bugly:nativecrashreport:3.6.0.1'
}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('YYYY_MM_dd')
    return formattedDate
}
